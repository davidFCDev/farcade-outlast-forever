/* Global styles for edge cases that Tailwind cannot handle */
@layer base {
  :root {
    /* Dynamic runtime values */
    --background-pattern-opacity: 0;
    --dynamic-width: 0;
    --dynamic-height: 0;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html, body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    height: 100%;
  }

  body {
    font-family: system-ui, -apple-system, 'Segoe UI', Roboto, Ubuntu, Cantarell, 'Noto Sans', sans-serif;
    color: var(--color-text-primary);
    font-size: var(--text-base);
    line-height: 1.5;
  }
  
  canvas {
    outline: none;
    display: block;
  }

  .noise-bg {
    background-color: var(--color-bg-primary);
    background-image: 
      radial-gradient(circle at center, rgba(255,255,255,0.03) 0%, rgba(255,255,255,0.01) 60%, rgba(0,0,0,0.2) 100%),
      url("data:image/svg+xml,%3Csvg viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.8' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.1'/%3E%3C/svg%3E");
    background-size: 100% 100%, auto;
    background-attachment: fixed;
    color: var(--color-text-primary);
    font-size: var(--text-base);
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  body.initialized .noise-bg::before {
    opacity: var(--background-pattern-opacity);
  }
  
  /* Complex background patterns that require data URIs */
  .game-container-pattern::before {
    content: '';
    position: absolute;
    inset: 0;
    background-image: url("../assets/pattern.png");
    background-size: 150px 150px;
    background-repeat: repeat;
    opacity: var(--background-pattern-opacity);
    mix-blend-mode: overlay;
    pointer-events: none;
    z-index: 0;
  }
}